#include<bits/stdc++.h>
using namespace std;
#define maxn 3e5
vector<int>gr[maxn];
int val[maxn];
int dis[maxn],bgn[maxn],en[maxn];
int timer = 1;
void dfs(int u,int p)
{
    dis[timer]=val[u];
    bgn[u] = timer;
    timer++;
    for(int v : gr[u])
    {
        if(v != p)
        {
            dfs(v,u);
        }
    }
    en[v]=timer;
}

int tree[5*maxn];
struct data
{
    int typ,man;
};
data lazy[5*maxn];
void build(int id,int l,int r)
{
    if(l == r)
    {
        tree[id]=val[l];
        return ;
    }

    int mid = (l+r)/2;
    build(id*2,l,mid);
    build(id*2+1,mid+1,r);
}

void shift(int id,int l,int r)
{
    if(l != r)
    {
        lazy[id] =
    }
}
void updt(int id,int l,int r,int ql,int qr,int p,int t)
{
    if(lazy[id].val)
    {
        shift(id,l,r);
    }
    if(l>=ql && r<=qr)
    {
        lazy[id].val = p;
        lazy[id].typ = t;
        return ;
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    int n,m;
    cin >> n >> m;
    for(int i=0;i<n-1;i++)
    {
        int u,v;
        cin >> u >> v;
        gr[u].push_back(v);
        gr[v].push_back(u);
    }
    dfs(1,-1);
    return 0;
}
